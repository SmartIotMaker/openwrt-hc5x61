<%
--[[
	Info	Shadowsocks
	Author	Adadada <rssnsj@gmail.com>
	Copyright	2014
]]--

local ver = require "luci.version"
local adv_menu = luci.util.get_adv_menu()
local request_uri = luci.http.getenv("REQUEST_URI")
local ok, json = pcall(require, "hiwifi.json")
if not ok then
	ok, json = pcall(require, "json")
end
if not ok then
	ok, json = pcall(require, "luci.json")
end
if not ok then
	print("*** No 'json' module candidate.")
	os.exit(9)
end

-- -------------------------------------------------
function mkdirr(dirpath)
	os.execute("mkdir -p '" .. dirpath .. "' -m777")
end

function is_shadowsocks_on()
	local rc = os.execute([[
if iptables-save | grep 'shadowsocks_pre.*REDIRECT' >/dev/null && pidof ss-redir >/dev/null; then
	exit 0
else
	exit 1
fi
]])
	if rc == 0 then
		return true
	else
		return false
	end
end

function is_shadowsocks_en()
	if os.execute("/etc/init.d/vanillass enabled") == 0 then
		return true
	else
		return false
	end
end

-- -------------------------------------------------
local page_action = tostring(luci.http.formvalue("PAGE_ACTION"))

if page_action == "save_params" then
%>
<%
	local ss_server_addr = tostring(luci.http.formvalue("SS_SERVER_ADDR"))
	local ss_server_port = tonumber(luci.http.formvalue("SS_SERVER_PORT"))
	local ss_server_passwd = tostring(luci.http.formvalue("SS_SERVER_PASSWORD"))
	local ss_server_method = tostring(luci.http.formvalue("SS_SERVER_METHOD"))
	local safe_dns_server = tostring(luci.http.formvalue("SAFE_DNS_SERVER"))
	local safe_dns_port = tonumber(luci.http.formvalue("SAFE_DNS_PORT"))
	local ss_mode = tonumber(luci.http.formvalue("SS_MODE"))
	local __safe_dns_addr = ""

	local failure_msg = nil

	if not string.match(ss_server_addr, '^[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+$') and
		not string.match(ss_server_addr, '^[A-Za-z0-9_:\.-]\+$') then
		failure_msg = "无效的服务器IP地址或域名"
	elseif ss_server_port == nil then
		failure_msg = "无效的服务器端口号"
	elseif ss_server_method == "" then
		failure_msg = "无效的加密类型"
	elseif safe_dns_server and not string.match(safe_dns_server, '^[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+$') and 
		not string.match(safe_dns_server, '^[0-9a-f:\.]\+$') then
		failure_msg = "无效的DNS服务器IP"
	end

	if safe_dns_server then
		if safe_dns_port == nil or safe_dns_port <= 0 or safe_dns_port > 65535 then
			safe_dns_port = 53
		end
		__safe_dns_addr = safe_dns_server .. "#" .. safe_dns_port
	end

	local code, msg, status = 0, "", ""
	if failure_msg then
		code = -1
		msg = failure_msg
		status = "stopped"
	else
		-- Write configuration to file
		mkdirr("/etc/default")
		local fp = io.open("/etc/default/ss-redir.defs.sh", "w")
		fp:write(string.format([[
SS_SERVER_ADDR='%s'
SS_SERVER_PORT='%d'
SS_SERVER_PASSWORD='%s'
SS_SERVER_METHOD='%s'
SAFE_DNS_SERVER='%s'
SS_MODE='%s'
]], ss_server_addr, ss_server_port, ss_server_passwd, ss_server_method, __safe_dns_addr, ss_mode))
		fp:close()

		if is_shadowsocks_en() or is_shadowsocks_on() then
			if os.execute("/etc/init.d/vanillass restart") == 0 then
				code = 0
				msg = "OK"
			else
				code = -1
				msg = "配置成功，但启动失败"
			end
		else
			code = 0
			msg = "OK"
		end
	end

	if is_shadowsocks_on() then
		status = "running"
	else
		status = "stopped"
	end

	print("{\"code\":\"" .. code .. "\", \"msg\":\"" .. msg .. "\", \"status\":\"" .. status .. "\"}")
	os.exit(0)
elseif page_action == "flush_status" then
%>
<%
	if is_shadowsocks_on() then
		print("{\"status\":\"running\"}")
	else
		print("{\"status\":\"stopped\"}")
	end
	os.exit(0)
elseif page_action == "start_ss" then
%>
<%
	os.execute("/etc/init.d/vanillass start")
	if is_shadowsocks_on() then
		print("{\"status\":\"running\"}")
	else
		print("{\"status\":\"stopped\"}")
	end
	os.exit(0)
elseif page_action == "stop_ss" then
%>
<%
	os.execute("/etc/init.d/vanillass stop")
	if is_shadowsocks_on() then
		print("{\"status\":\"running\"}")
	else
		print("{\"status\":\"stopped\"}")
	end
	os.exit(0)
else
	-- Translate shell parameters into JSON
	local __cmd = [[
	###
	if [ -f /etc/default/ss-redir.defs.sh ]; then
		. /etc/default/ss-redir.defs.sh
	else
		exit 9
	fi
	SAFE_DNS_PORT=`echo "$SAFE_DNS_SERVER" | awk -F'#' '{print $2}'`
	SAFE_DNS_SERVER=`echo "$SAFE_DNS_SERVER" | awk -F'#' '{print $1}'`
	cat <<EOF
{"SS_SERVER_ADDR":"$SS_SERVER_ADDR","SS_SERVER_PORT":"$SS_SERVER_PORT","SS_SERVER_PASSWORD":"$SS_SERVER_PASSWORD",
 "SS_SERVER_METHOD":"$SS_SERVER_METHOD","SAFE_DNS_SERVER":"$SAFE_DNS_SERVER","SAFE_DNS_PORT":"$SAFE_DNS_PORT",
 "SS_MODE":"$SS_MODE"}
EOF
]]
	local param = json.decode(io.popen(__cmd):read("*a"))
%>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="format-detection" content="telephone=no" />
<title>HiWiFi 路由器</title>
<link rel="stylesheet" href="<%=resource%>/web/css/style.css?v=<%=ver.svnRevNum%>" type="text/css"/>
<script type="text/javascript" src="<%=resource%>/web/js/jquery-1.8.1.min.js?v=<%=ver.svnRevNum%>"></script>
<script type="text/javascript" src="<%=resource%>/web/js/artDialog/jquery.artDialog.js?skin=blueskin"></script>
<script src="<%=resource%>/web/js/artDialog/plugins/iframeTools.source.js?v=<%=ver.svnRevNum%>"></script>
<style type="text/css">
table.zone td.tor { text-align:right;width:120px;line-height:14px; }
#con_stauts { width:300px; }
</style>
<script type="text/javascript">
$(document).ready(function () {

	function set_status_text(status) {
		var text = "未知", color = "grey";
		switch (status) {
		case "starting":
			text = "正在启动..."; color = "black";
			break;
		case "stopping":
			text = "正在停止..."; color = "black";
			break;
		case "configuring":
			text = "配置中..."; color = "black";
			break;
		case "flushing":
			text = "刷新中..."; color = "black";
			break;
		case "running":
			text = "运行中"; color = "green";
			break;
		case "stopped":
			text = "未启动"; color = "red";
			break;
		}
		document.getElementById("status_text").innerHTML = "<font color='" + color + "'>" + text + "</font>";
	}
	function __flush_ss_status() {
		set_status_text("flushing");
		var req_data = [ { name:"PAGE_ACTION", value:"flush_status" } ];
		$.getJSON("<%=luci.dispatcher.build_url("admin_web", "plugin","shadowsocks")%>", req_data, function (rsp_data) {
			set_status_text(rsp_data.status);
		});
	}

	__flush_ss_status();
	$("#flush_button").on("click", __flush_ss_status);
	$("#start_button").on("click", function () {
		set_status_text("starting");
		var req_data = [ { name:"PAGE_ACTION", value:"start_ss" } ];
		$.getJSON("<%=luci.dispatcher.build_url("admin_web", "plugin","shadowsocks")%>", req_data, function (rsp_data) {
			set_status_text(rsp_data.status);
		});
	});
	$("#stop_button").on("click", function () {
		set_status_text("stopping");
		var req_data = [ { name:"PAGE_ACTION", value:"stop_ss" } ];
		$.getJSON("<%=luci.dispatcher.build_url("admin_web", "plugin","shadowsocks")%>", req_data, function (rsp_data) {
			set_status_text(rsp_data.status);
		});
	});

	$("#save_button").on("click", function () {
		set_status_text("configuring");
		var req_data = $("#form1").serializeArray(); 
		$.post("<%=luci.dispatcher.build_url("admin_web", "plugin","shadowsocks")%>", req_data, function (rsp_data) {
			set_status_text(rsp_data.status);
		}, "json");
	});
});
</script>
</head>
<body>
<div class="title">
	<h2>高级设置<i>设置路由器安全, 及其他高级设置</i></h2>
</div>
<div class="menu">
	<% include("admin_web/menu/adv_menu") %>
</div>
<div class="box setup_box" style="height:auto;overflow:auto;">
<form id="form1" method="POST" action="<%=luci.dispatcher.build_url("admin_web", "plugin","shadowsocks")%>">
<ul class="ullist">
	<li class="ipt_from">
		<div class="memu row">
			<input type="hidden" name="PAGE_ACTION" value="save_params" />
			<p>
				<label><font color="red">*</font> 服务器地址</label>
				<input type="text" name="SS_SERVER_ADDR" class="txt" value="<%=param.SS_SERVER_ADDR%>" />
			</p>
			<p>
				<label><font color="red">*</font> 服务器端口</label>
				<input type="text" name="SS_SERVER_PORT" class="txt" value="<%=param.SS_SERVER_PORT%>" />
			</p>
			<p>
				<label><font color="red">*</font> 加密密钥</label>
				<input type="text" name="SS_SERVER_PASSWORD" class="txt" value="<%=param.SS_SERVER_PASSWORD%>" />
			</p>
			<p>
				<label><font color="red">*</font> 加密类型</label>
				<select name="SS_SERVER_METHOD" class="txt">
<%
					local ss_methods = { "table", "rc4", "aes-128-cfb", "aes-192-cfb", "aes-256-cfb", "bf-cfb",
							"camellia-128-cfb", "camellia-192-cfb", "camellia-256-cfb", "cast5-cfb", "des-cfb" }
					for __k, __v in pairs(ss_methods) do
						if __v == param.SS_SERVER_METHOD then
							print("<option selected=\"selected\" value=\"" .. __v .. "\">" .. __v .. "</option>")
						else
							print("<option value=\"" .. __v .. "\">" .. __v .. "</option>")
						end
					end
%>
				</select>
			</p>
			<p>
				<label>&nbsp; 安全DNS</label>
				<input type="text" name="SAFE_DNS_SERVER" class="txt" style="width:130px;" value="<%=param.SAFE_DNS_SERVER%>" />
				<label>端口</label>
				<input type="text" name="SAFE_DNS_PORT" class="txt" style="margin-left:40px;width:50px;" value="<%=param.SAFE_DNS_PORT%>" />
			</p>
			<p>
				<label>&nbsp; 模式</label>
				<select name="SS_MODE" class="txt">
<%
					local s0 = param.SS_MODE == "0" and "selected=\"selected\"" or ""
					local s1 = param.SS_MODE == "1" and "selected=\"selected\"" or ""
%>
					<option value="0" <%=s0%>>智能模式</option>
					<option value="1" <%=s1%>>全局模式</option>
				</select>
			</p>

			<div class="form-row">
				<p>
					<label>&nbsp; 状态:</label>
					<span id="status_text" style="margin:0px 30px 0px 100px;">
<%
					if is_shadowsocks_on() then
						print("<font color='green'>运行中</font>")
					else
						print("<font color='red'>未启动</font>")
					end
%>
					</span>
					<a href="javascript:void();" id="start_button">启动</a> 
					<a href="javascript:void();" id="stop_button">停止</a>
					<a href="javascript:void();" id="flush_button">刷新</a>
					<span id="failure_msg" style="margin:0px 0px 0px 50px;color:#ff0000;"></span>
				</p>
			</div>
		</div>
	</li>
	<li  class="ipt_from"><div class="btnbox"><input id="save_button" type="button" value="保存" class="btn" /></div></li>
</ul></form>
</div>
</body>
</html>
<%
end
%>
